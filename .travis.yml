language: java

env:
  global:
  - SERVICE_NAME=message-ms
  - DOCKER_IMAGE_NAME=$SERVICE_NAME-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER

cache:
  directories:
  - "$HOME/google-cloud-sdk/"
  - "$HOME/.m2"

before_install:
- openssl aes-256-cbc -K $encrypted_4cd52d8a0d11_key -iv $encrypted_4cd52d8a0d11_iv -in client-secret.json.enc -out client-secret.json -d
- gcloud version || true
- if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
- source $HOME/google-cloud-sdk/path.bash.inc
- gcloud version
- gcloud components update kubectl
- gcloud auth activate-service-account --key-file client-secret.json
- gcloud config set project code-and-play
- gcloud config set compute/zone europe-west3-c
- gcloud container clusters get-credentials cap


# install stage is used to build the app and run unit tests
#install:
# -  ./mvnw install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
# -  ./mvnw test -B


#before_script:

# build and push the docker image
script:
- docker build --no-cache=true -t $DOCKER_IMAGE_NAME .
- gcloud docker -- push /cap/$SERVICE_NAME/$DOCKER_IMAGE_NAME

#before_cache:

#after_success:

#before_deploy:
# maybe render k8s deployment files

#deploy:
#  provider: script
#  script: kubectl apply -f ...

